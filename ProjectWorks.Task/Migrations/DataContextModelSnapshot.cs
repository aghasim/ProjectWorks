// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectWorks.Task;

namespace ProjectWorks.Task.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjectWorks.Task.Data.Models.MainTask", b =>
                {
                    b.Property<Guid>("TaskId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<double>("ManyForTask");

                    b.Property<Guid>("ResponsibleId");

                    b.Property<string>("ResponsibleName");

                    b.Property<string>("TaskName")
                        .IsRequired();

                    b.Property<DateTime>("TimeCompletion");

                    b.Property<DateTime>("TimeExecution");

                    b.Property<DateTime>("TimeStart");

                    b.HasKey("TaskId");

                    b.HasIndex("TaskId")
                        .IsUnique();

                    b.ToTable("ProjectWorks_MainTask");
                });

            modelBuilder.Entity("ProjectWorks.Task.Data.Models.NestedTask", b =>
                {
                    b.Property<Guid>("NestedTaskId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<Guid>("MainTaskId");

                    b.Property<double>("ManyForTask");

                    b.Property<Guid>("ResponsibleId");

                    b.Property<string>("ResponsibleName");

                    b.Property<string>("TaskName")
                        .IsRequired();

                    b.Property<DateTime>("TimeCompletion");

                    b.Property<DateTime>("TimeExecution");

                    b.Property<DateTime>("TimeStart");

                    b.HasKey("NestedTaskId");

                    b.HasIndex("NestedTaskId")
                        .IsUnique();

                    b.ToTable("ProjectWorks_NestedTask");
                });

            modelBuilder.Entity("ProjectWorks.Task.Data.Models.NestedTask", b =>
                {
                    b.HasOne("ProjectWorks.Task.Data.Models.MainTask", "MainTask")
                        .WithMany("NestedTasks")
                        .HasForeignKey("NestedTaskId");
                });
#pragma warning restore 612, 618
        }
    }
}
