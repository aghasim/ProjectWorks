{"Timestamp":"2019-03-24T10:39:13.9181417+04:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\aghas\\AppData\\Local\\ASP.NET\\DataProtection-Keys","SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2019-03-24T10:39:37.1659704+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks/6","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG4DU0J0Q9:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4DU0J0Q9"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  "}]}}
{"Timestamp":"2019-03-24T10:39:37.1990082+04:00","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HLLG4DU0J0Q9:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4DU0J0Q9"}}
{"Timestamp":"2019-03-24T10:39:37.2249838+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG4DU0J0Q9:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4DU0J0Q9"}}
{"Timestamp":"2019-03-24T10:39:37.2442501+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"db280bf8-b1c1-4ff4-9c9d-4ad2ee52fd1a","RequestId":"0HLLG4DU0J0Q9:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4DU0J0Q9"}}
{"Timestamp":"2019-03-24T10:39:37.4502417+04:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ElapsedMilliseconds":201.922,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"db280bf8-b1c1-4ff4-9c9d-4ad2ee52fd1a","RequestId":"0HLLG4DU0J0Q9:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4DU0J0Q9"}}
{"Timestamp":"2019-03-24T10:39:37.4726193+04:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG4DU0J0Q9:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4DU0J0Q9"}}
{"Timestamp":"2019-03-24T10:39:37.5812669+04:00","Level":"Error","MessageTemplate":"An unhandled exception has occurred while executing the request.","Exception":"System.InvalidOperationException: Unable to resolve service for type 'ProjectWorks.AmrApp.IChangeConnectionString' while attempting to activate 'ProjectWorks.Task.Services.AmrAppRepository'.\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.GetService(IServiceProvider sp, Type type, Type requiredBy, Boolean isDefaultParameterRequired)\r\n   at lambda_method(Closure , IServiceProvider , Object[] )\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerActivatorProvider.<>c__DisplayClass4_0.<CreateActivator>b__0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass5_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)","Properties":{"EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HLLG4DU0J0Q9:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4DU0J0Q9"}}
{"Timestamp":"2019-03-24T10:39:37.6917595+04:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","Properties":{"ElapsedMilliseconds":526.89280000000008,"StatusCode":500,"ContentType":"text/html; charset=utf-8","HostingRequestFinishedLog":"Request finished in 526.8928ms 500 text/html; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG4DU0J0Q9:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4DU0J0Q9"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished in 526.8928ms 500 text/html; charset=utf-8"}]}}
{"Timestamp":"2019-03-24T10:47:47.0984971+04:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\aghas\\AppData\\Local\\ASP.NET\\DataProtection-Keys","SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2019-03-24T10:47:52.3671599+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks/6","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG4IHJ8H9L:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4IHJ8H9L"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  "}]}}
{"Timestamp":"2019-03-24T10:47:52.3941760+04:00","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HLLG4IHJ8H9L:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4IHJ8H9L"}}
{"Timestamp":"2019-03-24T10:47:52.4222601+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG4IHJ8H9L:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4IHJ8H9L"}}
{"Timestamp":"2019-03-24T10:47:52.4408016+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"b9ae2c77-babc-4691-9193-e8ce95b57891","RequestId":"0HLLG4IHJ8H9L:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4IHJ8H9L"}}
{"Timestamp":"2019-03-24T10:47:52.5157073+04:00","Level":"Information","MessageTemplate":"Executing action method {ActionName} with arguments ({Arguments}) - Validation state: {ValidationState}","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","Arguments":["6"],"ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"b9ae2c77-babc-4691-9193-e8ce95b57891","RequestId":"0HLLG4IHJ8H9L:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4IHJ8H9L"}}
{"Timestamp":"2019-03-24T10:49:00.7365112+04:00","Level":"Information","MessageTemplate":"Executed action method {ActionName}, returned result {ActionResult} in {ElapsedMilliseconds}ms.","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ActionResult":"Microsoft.AspNetCore.Mvc.OkObjectResult","ElapsedMilliseconds":68216.107700000008,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"b9ae2c77-babc-4691-9193-e8ce95b57891","RequestId":"0HLLG4IHJ8H9L:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4IHJ8H9L"}}
{"Timestamp":"2019-03-24T10:49:00.9510527+04:00","Level":"Information","MessageTemplate":"Executing ObjectResult, writing value of type '{Type}'.","Properties":{"Type":"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[ProjectWorks.AmrApp.Models.AppUsers, ProjectWorks.AmrApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"b9ae2c77-babc-4691-9193-e8ce95b57891","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","RequestId":"0HLLG4IHJ8H9L:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4IHJ8H9L"}}
{"Timestamp":"2019-03-24T10:49:01.2102511+04:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ElapsedMilliseconds":68765.0564,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"b9ae2c77-babc-4691-9193-e8ce95b57891","RequestId":"0HLLG4IHJ8H9L:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4IHJ8H9L"}}
{"Timestamp":"2019-03-24T10:49:01.2352653+04:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG4IHJ8H9L:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4IHJ8H9L"}}
{"Timestamp":"2019-03-24T10:49:01.3688502+04:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","Properties":{"ElapsedMilliseconds":69002.7568,"StatusCode":200,"ContentType":"application/json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 69002.7568ms 200 application/json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG4IHJ8H9L:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4IHJ8H9L"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished in 69002.7568ms 200 application/json; charset=utf-8"}]}}
{"Timestamp":"2019-03-24T10:49:47.5530928+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks/6","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG4IHJ8H9L:00000002","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4IHJ8H9L"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  "}]}}
{"Timestamp":"2019-03-24T10:49:47.5552189+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG4IHJ8H9L:00000002","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4IHJ8H9L"}}
{"Timestamp":"2019-03-24T10:49:47.5566709+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"b9ae2c77-babc-4691-9193-e8ce95b57891","RequestId":"0HLLG4IHJ8H9L:00000002","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4IHJ8H9L"}}
{"Timestamp":"2019-03-24T10:49:47.6257598+04:00","Level":"Information","MessageTemplate":"Executing action method {ActionName} with arguments ({Arguments}) - Validation state: {ValidationState}","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","Arguments":["6"],"ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"b9ae2c77-babc-4691-9193-e8ce95b57891","RequestId":"0HLLG4IHJ8H9L:00000002","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4IHJ8H9L"}}
{"Timestamp":"2019-03-24T10:53:18.0201125+04:00","Level":"Information","MessageTemplate":"Executed action method {ActionName}, returned result {ActionResult} in {ElapsedMilliseconds}ms.","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ActionResult":"Microsoft.AspNetCore.Mvc.OkObjectResult","ElapsedMilliseconds":210385.81300000002,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"b9ae2c77-babc-4691-9193-e8ce95b57891","RequestId":"0HLLG4IHJ8H9L:00000002","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4IHJ8H9L"}}
{"Timestamp":"2019-03-24T10:53:18.0392730+04:00","Level":"Information","MessageTemplate":"Executing ObjectResult, writing value of type '{Type}'.","Properties":{"Type":"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[ProjectWorks.AmrApp.Models.AppUsers, ProjectWorks.AmrApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"b9ae2c77-babc-4691-9193-e8ce95b57891","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","RequestId":"0HLLG4IHJ8H9L:00000002","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4IHJ8H9L"}}
{"Timestamp":"2019-03-24T10:53:18.7569317+04:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ElapsedMilliseconds":211198.07570000002,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"b9ae2c77-babc-4691-9193-e8ce95b57891","RequestId":"0HLLG4IHJ8H9L:00000002","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4IHJ8H9L"}}
{"Timestamp":"2019-03-24T10:53:18.7793668+04:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG4IHJ8H9L:00000002","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4IHJ8H9L"}}
{"Timestamp":"2019-03-24T10:53:18.9014868+04:00","Level":"Error","MessageTemplate":"An unhandled exception has occurred while executing the request.","Exception":"Newtonsoft.Json.JsonSerializationException: Self referencing loop detected with type 'ProjectWorks.AmrApp.Models.AppUsers'. Path '[0].filial.appUsers'.\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(JsonWriter writer, Object value, JsonProperty property, JsonContract contract, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(JsonWriter writer, IEnumerable values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(JsonWriter writer, IEnumerable values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(JsonWriter jsonWriter, Object value, Type objectType)\r\n   at Newtonsoft.Json.JsonSerializer.SerializeInternal(JsonWriter jsonWriter, Object value, Type objectType)\r\n   at Newtonsoft.Json.JsonSerializer.Serialize(JsonWriter jsonWriter, Object value)\r\n   at Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteObject(TextWriter writer, Object value)\r\n   at Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)","Properties":{"EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HLLG4IHJ8H9L:00000002","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4IHJ8H9L"}}
{"Timestamp":"2019-03-24T10:53:18.9524809+04:00","Level":"Warning","MessageTemplate":"The response has already started, the error page middleware will not be executed.","Properties":{"EventId":{"Id":2,"Name":"ResponseStarted"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HLLG4IHJ8H9L:00000002","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4IHJ8H9L"}}
{"Timestamp":"2019-03-24T10:53:18.9915947+04:00","Level":"Error","MessageTemplate":"Connection id \"{ConnectionId}\", Request id \"{TraceIdentifier}\": An unhandled exception was thrown by the application.","Exception":"Newtonsoft.Json.JsonSerializationException: Self referencing loop detected with type 'ProjectWorks.AmrApp.Models.AppUsers'. Path '[0].filial.appUsers'.\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(JsonWriter writer, Object value, JsonProperty property, JsonContract contract, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(JsonWriter writer, IEnumerable values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(JsonWriter writer, IEnumerable values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(JsonWriter jsonWriter, Object value, Type objectType)\r\n   at Newtonsoft.Json.JsonSerializer.SerializeInternal(JsonWriter jsonWriter, Object value, Type objectType)\r\n   at Newtonsoft.Json.JsonSerializer.Serialize(JsonWriter jsonWriter, Object value)\r\n   at Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteObject(TextWriter writer, Object value)\r\n   at Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)","Properties":{"ConnectionId":"0HLLG4IHJ8H9L","TraceIdentifier":"0HLLG4IHJ8H9L:00000002","EventId":{"Id":13,"Name":"ApplicationError"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel","RequestId":"0HLLG4IHJ8H9L:00000002","RequestPath":"/api/tasks/6","CorrelationId":null}}
{"Timestamp":"2019-03-24T10:53:19.0145620+04:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","Properties":{"ElapsedMilliseconds":211461.34170000002,"StatusCode":200,"ContentType":"application/json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 211461.3417ms 200 application/json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG4IHJ8H9L:00000002","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4IHJ8H9L"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished in 211461.3417ms 200 application/json; charset=utf-8"}]}}
{"Timestamp":"2019-03-24T10:55:35.4766155+04:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\aghas\\AppData\\Local\\ASP.NET\\DataProtection-Keys","SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2019-03-24T10:55:40.0999135+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks/6","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG4MT01986:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4MT01986"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  "}]}}
{"Timestamp":"2019-03-24T10:55:40.1128219+04:00","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HLLG4MT01986:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4MT01986"}}
{"Timestamp":"2019-03-24T10:55:40.1321090+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG4MT01986:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4MT01986"}}
{"Timestamp":"2019-03-24T10:55:40.1460706+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"665fa977-24f6-49d5-a86c-bf3d0d67a051","RequestId":"0HLLG4MT01986:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4MT01986"}}
{"Timestamp":"2019-03-24T10:55:40.1725286+04:00","Level":"Information","MessageTemplate":"Executing action method {ActionName} with arguments ({Arguments}) - Validation state: {ValidationState}","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","Arguments":["6"],"ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"665fa977-24f6-49d5-a86c-bf3d0d67a051","RequestId":"0HLLG4MT01986:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4MT01986"}}
{"Timestamp":"2019-03-24T10:55:40.2536831+04:00","Level":"Information","MessageTemplate":"Executed action method {ActionName}, returned result {ActionResult} in {ElapsedMilliseconds}ms.","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ActionResult":"Microsoft.AspNetCore.Mvc.OkObjectResult","ElapsedMilliseconds":76.1699,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"665fa977-24f6-49d5-a86c-bf3d0d67a051","RequestId":"0HLLG4MT01986:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4MT01986"}}
{"Timestamp":"2019-03-24T10:55:40.2597740+04:00","Level":"Information","MessageTemplate":"Executing ObjectResult, writing value of type '{Type}'.","Properties":{"Type":"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[ProjectWorks.AmrApp.Models.Filials, ProjectWorks.AmrApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"665fa977-24f6-49d5-a86c-bf3d0d67a051","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","RequestId":"0HLLG4MT01986:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4MT01986"}}
{"Timestamp":"2019-03-24T10:55:41.7951527+04:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ElapsedMilliseconds":1645.2566000000002,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"665fa977-24f6-49d5-a86c-bf3d0d67a051","RequestId":"0HLLG4MT01986:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4MT01986"}}
{"Timestamp":"2019-03-24T10:55:41.7971752+04:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG4MT01986:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4MT01986"}}
{"Timestamp":"2019-03-24T10:55:41.7999542+04:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","Properties":{"ElapsedMilliseconds":1700.9876000000002,"StatusCode":200,"ContentType":"application/json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 1700.9876ms 200 application/json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG4MT01986:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4MT01986"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished in 1700.9876ms 200 application/json; charset=utf-8"}]}}
{"Timestamp":"2019-03-24T10:58:28.6236087+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks/11","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/11  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG4MT01988:00000001","RequestPath":"/api/tasks/11","CorrelationId":null,"ConnectionId":"0HLLG4MT01988"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/11  "}]}}
{"Timestamp":"2019-03-24T10:58:28.6310980+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG4MT01988:00000001","RequestPath":"/api/tasks/11","CorrelationId":null,"ConnectionId":"0HLLG4MT01988"}}
{"Timestamp":"2019-03-24T10:58:28.6352982+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"665fa977-24f6-49d5-a86c-bf3d0d67a051","RequestId":"0HLLG4MT01988:00000001","RequestPath":"/api/tasks/11","CorrelationId":null,"ConnectionId":"0HLLG4MT01988"}}
{"Timestamp":"2019-03-24T10:58:28.6412935+04:00","Level":"Information","MessageTemplate":"Executing action method {ActionName} with arguments ({Arguments}) - Validation state: {ValidationState}","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","Arguments":["11"],"ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"665fa977-24f6-49d5-a86c-bf3d0d67a051","RequestId":"0HLLG4MT01988:00000001","RequestPath":"/api/tasks/11","CorrelationId":null,"ConnectionId":"0HLLG4MT01988"}}
{"Timestamp":"2019-03-24T10:58:28.6449913+04:00","Level":"Information","MessageTemplate":"Executed action method {ActionName}, returned result {ActionResult} in {ElapsedMilliseconds}ms.","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ActionResult":"Microsoft.AspNetCore.Mvc.OkObjectResult","ElapsedMilliseconds":0.9976,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"665fa977-24f6-49d5-a86c-bf3d0d67a051","RequestId":"0HLLG4MT01988:00000001","RequestPath":"/api/tasks/11","CorrelationId":null,"ConnectionId":"0HLLG4MT01988"}}
{"Timestamp":"2019-03-24T10:58:28.6509945+04:00","Level":"Information","MessageTemplate":"Executing ObjectResult, writing value of type '{Type}'.","Properties":{"Type":"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[ProjectWorks.AmrApp.Models.Filials, ProjectWorks.AmrApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"665fa977-24f6-49d5-a86c-bf3d0d67a051","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","RequestId":"0HLLG4MT01988:00000001","RequestPath":"/api/tasks/11","CorrelationId":null,"ConnectionId":"0HLLG4MT01988"}}
{"Timestamp":"2019-03-24T10:58:28.6589568+04:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ElapsedMilliseconds":19.6604,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"665fa977-24f6-49d5-a86c-bf3d0d67a051","RequestId":"0HLLG4MT01988:00000001","RequestPath":"/api/tasks/11","CorrelationId":null,"ConnectionId":"0HLLG4MT01988"}}
{"Timestamp":"2019-03-24T10:58:28.6606349+04:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG4MT01988:00000001","RequestPath":"/api/tasks/11","CorrelationId":null,"ConnectionId":"0HLLG4MT01988"}}
{"Timestamp":"2019-03-24T10:58:28.6630856+04:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","Properties":{"ElapsedMilliseconds":39.2997,"StatusCode":200,"ContentType":"application/json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 39.2997ms 200 application/json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG4MT01988:00000001","RequestPath":"/api/tasks/11","CorrelationId":null,"ConnectionId":"0HLLG4MT01988"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished in 39.2997ms 200 application/json; charset=utf-8"}]}}
{"Timestamp":"2019-03-24T10:58:50.4984049+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks/5","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/5  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG4MT01988:00000002","RequestPath":"/api/tasks/5","CorrelationId":null,"ConnectionId":"0HLLG4MT01988"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/5  "}]}}
{"Timestamp":"2019-03-24T10:58:50.5006650+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG4MT01988:00000002","RequestPath":"/api/tasks/5","CorrelationId":null,"ConnectionId":"0HLLG4MT01988"}}
{"Timestamp":"2019-03-24T10:58:50.5023285+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"665fa977-24f6-49d5-a86c-bf3d0d67a051","RequestId":"0HLLG4MT01988:00000002","RequestPath":"/api/tasks/5","CorrelationId":null,"ConnectionId":"0HLLG4MT01988"}}
{"Timestamp":"2019-03-24T10:58:50.5044048+04:00","Level":"Information","MessageTemplate":"Executing action method {ActionName} with arguments ({Arguments}) - Validation state: {ValidationState}","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","Arguments":["5"],"ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"665fa977-24f6-49d5-a86c-bf3d0d67a051","RequestId":"0HLLG4MT01988:00000002","RequestPath":"/api/tasks/5","CorrelationId":null,"ConnectionId":"0HLLG4MT01988"}}
{"Timestamp":"2019-03-24T10:58:50.5068122+04:00","Level":"Information","MessageTemplate":"Executed action method {ActionName}, returned result {ActionResult} in {ElapsedMilliseconds}ms.","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ActionResult":"Microsoft.AspNetCore.Mvc.OkObjectResult","ElapsedMilliseconds":0.5828,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"665fa977-24f6-49d5-a86c-bf3d0d67a051","RequestId":"0HLLG4MT01988:00000002","RequestPath":"/api/tasks/5","CorrelationId":null,"ConnectionId":"0HLLG4MT01988"}}
{"Timestamp":"2019-03-24T10:58:50.5122727+04:00","Level":"Information","MessageTemplate":"Executing ObjectResult, writing value of type '{Type}'.","Properties":{"Type":"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[ProjectWorks.AmrApp.Models.Filials, ProjectWorks.AmrApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"665fa977-24f6-49d5-a86c-bf3d0d67a051","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","RequestId":"0HLLG4MT01988:00000002","RequestPath":"/api/tasks/5","CorrelationId":null,"ConnectionId":"0HLLG4MT01988"}}
{"Timestamp":"2019-03-24T10:58:50.5249777+04:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ElapsedMilliseconds":20.9307,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"665fa977-24f6-49d5-a86c-bf3d0d67a051","RequestId":"0HLLG4MT01988:00000002","RequestPath":"/api/tasks/5","CorrelationId":null,"ConnectionId":"0HLLG4MT01988"}}
{"Timestamp":"2019-03-24T10:58:50.5274983+04:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG4MT01988:00000002","RequestPath":"/api/tasks/5","CorrelationId":null,"ConnectionId":"0HLLG4MT01988"}}
{"Timestamp":"2019-03-24T10:58:50.5288577+04:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","Properties":{"ElapsedMilliseconds":30.533800000000003,"StatusCode":200,"ContentType":"application/json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 30.5338ms 200 application/json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG4MT01988:00000002","RequestPath":"/api/tasks/5","CorrelationId":null,"ConnectionId":"0HLLG4MT01988"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished in 30.5338ms 200 application/json; charset=utf-8"}]}}
{"Timestamp":"2019-03-24T11:06:00.4523041+04:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\aghas\\AppData\\Local\\ASP.NET\\DataProtection-Keys","SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2019-03-24T11:06:10.1648417+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks/6","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG4SOOTSS7:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4SOOTSS7"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  "}]}}
{"Timestamp":"2019-03-24T11:06:10.1785692+04:00","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HLLG4SOOTSS7:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4SOOTSS7"}}
{"Timestamp":"2019-03-24T11:06:10.1979612+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG4SOOTSS7:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4SOOTSS7"}}
{"Timestamp":"2019-03-24T11:06:10.2121085+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"511be4fd-b7a4-45c7-bd82-28c182f56e19","RequestId":"0HLLG4SOOTSS7:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4SOOTSS7"}}
{"Timestamp":"2019-03-24T11:06:10.2390937+04:00","Level":"Information","MessageTemplate":"Executing action method {ActionName} with arguments ({Arguments}) - Validation state: {ValidationState}","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","Arguments":["6"],"ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"511be4fd-b7a4-45c7-bd82-28c182f56e19","RequestId":"0HLLG4SOOTSS7:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4SOOTSS7"}}
{"Timestamp":"2019-03-24T11:06:10.3193012+04:00","Level":"Information","MessageTemplate":"Executed action method {ActionName}, returned result {ActionResult} in {ElapsedMilliseconds}ms.","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ActionResult":"Microsoft.AspNetCore.Mvc.OkObjectResult","ElapsedMilliseconds":75.129100000000008,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"511be4fd-b7a4-45c7-bd82-28c182f56e19","RequestId":"0HLLG4SOOTSS7:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4SOOTSS7"}}
{"Timestamp":"2019-03-24T11:06:10.3254363+04:00","Level":"Information","MessageTemplate":"Executing ObjectResult, writing value of type '{Type}'.","Properties":{"Type":"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[ProjectWorks.AmrApp.Models.Filials, ProjectWorks.AmrApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"511be4fd-b7a4-45c7-bd82-28c182f56e19","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","RequestId":"0HLLG4SOOTSS7:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4SOOTSS7"}}
{"Timestamp":"2019-03-24T11:06:11.8328253+04:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ElapsedMilliseconds":1616.3056000000001,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"511be4fd-b7a4-45c7-bd82-28c182f56e19","RequestId":"0HLLG4SOOTSS7:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4SOOTSS7"}}
{"Timestamp":"2019-03-24T11:06:11.8353950+04:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG4SOOTSS7:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4SOOTSS7"}}
{"Timestamp":"2019-03-24T11:06:11.8382861+04:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","Properties":{"ElapsedMilliseconds":1674.4807,"StatusCode":200,"ContentType":"application/json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 1674.4807ms 200 application/json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG4SOOTSS7:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4SOOTSS7"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished in 1674.4807ms 200 application/json; charset=utf-8"}]}}
{"Timestamp":"2019-03-24T11:06:27.3530480+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG4SOOTSS7:00000002","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLG4SOOTSS7"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks  "}]}}
{"Timestamp":"2019-03-24T11:06:27.3552165+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG4SOOTSS7:00000002","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLG4SOOTSS7"}}
{"Timestamp":"2019-03-24T11:06:27.3612766+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"a335acfa-1e49-479e-abe9-80482fe237c9","RequestId":"0HLLG4SOOTSS7:00000002","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLG4SOOTSS7"}}
{"Timestamp":"2019-03-24T11:06:27.3683115+04:00","Level":"Information","MessageTemplate":"Executing action method {ActionName} - Validation state: {ValidationState}","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"a335acfa-1e49-479e-abe9-80482fe237c9","RequestId":"0HLLG4SOOTSS7:00000002","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLG4SOOTSS7"}}
{"Timestamp":"2019-03-24T11:06:27.4560175+04:00","Level":"Information","MessageTemplate":"Executed action method {ActionName}, returned result {ActionResult} in {ElapsedMilliseconds}ms.","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ActionResult":"Microsoft.AspNetCore.Mvc.OkObjectResult","ElapsedMilliseconds":85.3478,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"a335acfa-1e49-479e-abe9-80482fe237c9","RequestId":"0HLLG4SOOTSS7:00000002","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLG4SOOTSS7"}}
{"Timestamp":"2019-03-24T11:06:27.4619978+04:00","Level":"Information","MessageTemplate":"Executing ObjectResult, writing value of type '{Type}'.","Properties":{"Type":"System.Collections.Generic.List`1[[ProjectWorks.Task.Data.Models.MainTask, ProjectWorks.Task, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"a335acfa-1e49-479e-abe9-80482fe237c9","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","RequestId":"0HLLG4SOOTSS7:00000002","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLG4SOOTSS7"}}
{"Timestamp":"2019-03-24T11:06:27.4690241+04:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ElapsedMilliseconds":103.92240000000001,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"a335acfa-1e49-479e-abe9-80482fe237c9","RequestId":"0HLLG4SOOTSS7:00000002","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLG4SOOTSS7"}}
{"Timestamp":"2019-03-24T11:06:27.4717708+04:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG4SOOTSS7:00000002","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLG4SOOTSS7"}}
{"Timestamp":"2019-03-24T11:06:27.4758704+04:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","Properties":{"ElapsedMilliseconds":122.84100000000001,"StatusCode":200,"ContentType":"application/json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 122.841ms 200 application/json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG4SOOTSS7:00000002","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLG4SOOTSS7"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished in 122.841ms 200 application/json; charset=utf-8"}]}}
{"Timestamp":"2019-03-24T11:06:36.0735101+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks/6","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG4SOOTSS7:00000003","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4SOOTSS7"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  "}]}}
{"Timestamp":"2019-03-24T11:06:36.0758348+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG4SOOTSS7:00000003","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4SOOTSS7"}}
{"Timestamp":"2019-03-24T11:06:36.0774918+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"511be4fd-b7a4-45c7-bd82-28c182f56e19","RequestId":"0HLLG4SOOTSS7:00000003","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4SOOTSS7"}}
{"Timestamp":"2019-03-24T11:06:36.0812990+04:00","Level":"Information","MessageTemplate":"Executing action method {ActionName} with arguments ({Arguments}) - Validation state: {ValidationState}","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","Arguments":["6"],"ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"511be4fd-b7a4-45c7-bd82-28c182f56e19","RequestId":"0HLLG4SOOTSS7:00000003","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4SOOTSS7"}}
{"Timestamp":"2019-03-24T11:06:36.0855721+04:00","Level":"Information","MessageTemplate":"Executed action method {ActionName}, returned result {ActionResult} in {ElapsedMilliseconds}ms.","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ActionResult":"Microsoft.AspNetCore.Mvc.OkObjectResult","ElapsedMilliseconds":0.9426,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"511be4fd-b7a4-45c7-bd82-28c182f56e19","RequestId":"0HLLG4SOOTSS7:00000003","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4SOOTSS7"}}
{"Timestamp":"2019-03-24T11:06:36.0893246+04:00","Level":"Information","MessageTemplate":"Executing ObjectResult, writing value of type '{Type}'.","Properties":{"Type":"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[ProjectWorks.AmrApp.Models.Filials, ProjectWorks.AmrApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"511be4fd-b7a4-45c7-bd82-28c182f56e19","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","RequestId":"0HLLG4SOOTSS7:00000003","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4SOOTSS7"}}
{"Timestamp":"2019-03-24T11:06:36.0945761+04:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ElapsedMilliseconds":14.681700000000001,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"511be4fd-b7a4-45c7-bd82-28c182f56e19","RequestId":"0HLLG4SOOTSS7:00000003","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4SOOTSS7"}}
{"Timestamp":"2019-03-24T11:06:36.0974453+04:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG4SOOTSS7:00000003","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4SOOTSS7"}}
{"Timestamp":"2019-03-24T11:06:36.1020244+04:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","Properties":{"ElapsedMilliseconds":28.5542,"StatusCode":200,"ContentType":"application/json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 28.5542ms 200 application/json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG4SOOTSS7:00000003","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4SOOTSS7"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished in 28.5542ms 200 application/json; charset=utf-8"}]}}
{"Timestamp":"2019-03-24T11:10:36.1675016+04:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\aghas\\AppData\\Local\\ASP.NET\\DataProtection-Keys","SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2019-03-24T11:10:44.4313928+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks/6","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG4VAGHT32:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4VAGHT32"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  "}]}}
{"Timestamp":"2019-03-24T11:10:44.4447676+04:00","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HLLG4VAGHT32:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4VAGHT32"}}
{"Timestamp":"2019-03-24T11:10:44.4638209+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG4VAGHT32:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4VAGHT32"}}
{"Timestamp":"2019-03-24T11:10:44.4784208+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"4174d4a0-1686-4930-bc21-be62b75306c6","RequestId":"0HLLG4VAGHT32:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4VAGHT32"}}
{"Timestamp":"2019-03-24T11:10:44.5050504+04:00","Level":"Information","MessageTemplate":"Executing action method {ActionName} with arguments ({Arguments}) - Validation state: {ValidationState}","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","Arguments":["6"],"ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"4174d4a0-1686-4930-bc21-be62b75306c6","RequestId":"0HLLG4VAGHT32:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4VAGHT32"}}
{"Timestamp":"2019-03-24T11:10:45.9587518+04:00","Level":"Information","MessageTemplate":"Executed action method {ActionName}, returned result {ActionResult} in {ElapsedMilliseconds}ms.","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ActionResult":"Microsoft.AspNetCore.Mvc.OkObjectResult","ElapsedMilliseconds":1448.7908,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"4174d4a0-1686-4930-bc21-be62b75306c6","RequestId":"0HLLG4VAGHT32:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4VAGHT32"}}
{"Timestamp":"2019-03-24T11:10:45.9645937+04:00","Level":"Information","MessageTemplate":"Executing ObjectResult, writing value of type '{Type}'.","Properties":{"Type":"null","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"4174d4a0-1686-4930-bc21-be62b75306c6","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","RequestId":"0HLLG4VAGHT32:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4VAGHT32"}}
{"Timestamp":"2019-03-24T11:10:45.9674195+04:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ElapsedMilliseconds":1485.2522000000001,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"4174d4a0-1686-4930-bc21-be62b75306c6","RequestId":"0HLLG4VAGHT32:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4VAGHT32"}}
{"Timestamp":"2019-03-24T11:10:45.9689211+04:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG4VAGHT32:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4VAGHT32"}}
{"Timestamp":"2019-03-24T11:10:45.9735927+04:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","Properties":{"ElapsedMilliseconds":1543.2268000000001,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 1543.2268ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG4VAGHT32:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG4VAGHT32"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished in 1543.2268ms 204 "}]}}
{"Timestamp":"2019-03-24T11:11:01.4179185+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks/5","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/5  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG4VAGHT32:00000002","RequestPath":"/api/tasks/5","CorrelationId":null,"ConnectionId":"0HLLG4VAGHT32"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/5  "}]}}
{"Timestamp":"2019-03-24T11:11:01.4190589+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG4VAGHT32:00000002","RequestPath":"/api/tasks/5","CorrelationId":null,"ConnectionId":"0HLLG4VAGHT32"}}
{"Timestamp":"2019-03-24T11:11:01.4206852+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"4174d4a0-1686-4930-bc21-be62b75306c6","RequestId":"0HLLG4VAGHT32:00000002","RequestPath":"/api/tasks/5","CorrelationId":null,"ConnectionId":"0HLLG4VAGHT32"}}
{"Timestamp":"2019-03-24T11:11:01.4243459+04:00","Level":"Information","MessageTemplate":"Executing action method {ActionName} with arguments ({Arguments}) - Validation state: {ValidationState}","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","Arguments":["5"],"ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"4174d4a0-1686-4930-bc21-be62b75306c6","RequestId":"0HLLG4VAGHT32:00000002","RequestPath":"/api/tasks/5","CorrelationId":null,"ConnectionId":"0HLLG4VAGHT32"}}
{"Timestamp":"2019-03-24T11:11:01.4565638+04:00","Level":"Information","MessageTemplate":"Executed action method {ActionName}, returned result {ActionResult} in {ElapsedMilliseconds}ms.","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ActionResult":"Microsoft.AspNetCore.Mvc.OkObjectResult","ElapsedMilliseconds":25.5139,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"4174d4a0-1686-4930-bc21-be62b75306c6","RequestId":"0HLLG4VAGHT32:00000002","RequestPath":"/api/tasks/5","CorrelationId":null,"ConnectionId":"0HLLG4VAGHT32"}}
{"Timestamp":"2019-03-24T11:11:01.4595214+04:00","Level":"Information","MessageTemplate":"Executing ObjectResult, writing value of type '{Type}'.","Properties":{"Type":"null","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"4174d4a0-1686-4930-bc21-be62b75306c6","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","RequestId":"0HLLG4VAGHT32:00000002","RequestPath":"/api/tasks/5","CorrelationId":null,"ConnectionId":"0HLLG4VAGHT32"}}
{"Timestamp":"2019-03-24T11:11:01.4607410+04:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ElapsedMilliseconds":38.2729,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"4174d4a0-1686-4930-bc21-be62b75306c6","RequestId":"0HLLG4VAGHT32:00000002","RequestPath":"/api/tasks/5","CorrelationId":null,"ConnectionId":"0HLLG4VAGHT32"}}
{"Timestamp":"2019-03-24T11:11:01.4624814+04:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG4VAGHT32:00000002","RequestPath":"/api/tasks/5","CorrelationId":null,"ConnectionId":"0HLLG4VAGHT32"}}
{"Timestamp":"2019-03-24T11:11:01.4642703+04:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","Properties":{"ElapsedMilliseconds":46.342800000000004,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 46.3428ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG4VAGHT32:00000002","RequestPath":"/api/tasks/5","CorrelationId":null,"ConnectionId":"0HLLG4VAGHT32"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished in 46.3428ms 204 "}]}}
{"Timestamp":"2019-03-24T11:11:18.4929597+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks/11","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/11  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG4VAGHT32:00000003","RequestPath":"/api/tasks/11","CorrelationId":null,"ConnectionId":"0HLLG4VAGHT32"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/11  "}]}}
{"Timestamp":"2019-03-24T11:11:18.4953613+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG4VAGHT32:00000003","RequestPath":"/api/tasks/11","CorrelationId":null,"ConnectionId":"0HLLG4VAGHT32"}}
{"Timestamp":"2019-03-24T11:11:18.4971493+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"4174d4a0-1686-4930-bc21-be62b75306c6","RequestId":"0HLLG4VAGHT32:00000003","RequestPath":"/api/tasks/11","CorrelationId":null,"ConnectionId":"0HLLG4VAGHT32"}}
{"Timestamp":"2019-03-24T11:11:18.4996473+04:00","Level":"Information","MessageTemplate":"Executing action method {ActionName} with arguments ({Arguments}) - Validation state: {ValidationState}","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","Arguments":["11"],"ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"4174d4a0-1686-4930-bc21-be62b75306c6","RequestId":"0HLLG4VAGHT32:00000003","RequestPath":"/api/tasks/11","CorrelationId":null,"ConnectionId":"0HLLG4VAGHT32"}}
{"Timestamp":"2019-03-24T11:11:18.9477991+04:00","Level":"Information","MessageTemplate":"Executed action method {ActionName}, returned result {ActionResult} in {ElapsedMilliseconds}ms.","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ActionResult":"Microsoft.AspNetCore.Mvc.OkObjectResult","ElapsedMilliseconds":443.82660000000004,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"4174d4a0-1686-4930-bc21-be62b75306c6","RequestId":"0HLLG4VAGHT32:00000003","RequestPath":"/api/tasks/11","CorrelationId":null,"ConnectionId":"0HLLG4VAGHT32"}}
{"Timestamp":"2019-03-24T11:11:18.9506536+04:00","Level":"Information","MessageTemplate":"Executing ObjectResult, writing value of type '{Type}'.","Properties":{"Type":"ProjectWorks.AmrApp.Models.AppUsers","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"4174d4a0-1686-4930-bc21-be62b75306c6","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","RequestId":"0HLLG4VAGHT32:00000003","RequestPath":"/api/tasks/11","CorrelationId":null,"ConnectionId":"0HLLG4VAGHT32"}}
{"Timestamp":"2019-03-24T11:11:19.0635053+04:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ElapsedMilliseconds":564.3776,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"4174d4a0-1686-4930-bc21-be62b75306c6","RequestId":"0HLLG4VAGHT32:00000003","RequestPath":"/api/tasks/11","CorrelationId":null,"ConnectionId":"0HLLG4VAGHT32"}}
{"Timestamp":"2019-03-24T11:11:19.0659465+04:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG4VAGHT32:00000003","RequestPath":"/api/tasks/11","CorrelationId":null,"ConnectionId":"0HLLG4VAGHT32"}}
{"Timestamp":"2019-03-24T11:11:19.0679020+04:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","Properties":{"ElapsedMilliseconds":574.97,"StatusCode":200,"ContentType":"application/json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 574.97ms 200 application/json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG4VAGHT32:00000003","RequestPath":"/api/tasks/11","CorrelationId":null,"ConnectionId":"0HLLG4VAGHT32"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished in 574.97ms 200 application/json; charset=utf-8"}]}}
{"Timestamp":"2019-03-24T11:12:29.3175067+04:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\aghas\\AppData\\Local\\ASP.NET\\DataProtection-Keys","SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2019-03-24T11:13:12.8083312+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks/6","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG50MNH95I:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG50MNH95I"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  "}]}}
{"Timestamp":"2019-03-24T11:13:12.8225235+04:00","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HLLG50MNH95I:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG50MNH95I"}}
{"Timestamp":"2019-03-24T11:13:12.8420661+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG50MNH95I:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG50MNH95I"}}
{"Timestamp":"2019-03-24T11:13:12.8564237+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"8b545297-9b0c-42f0-8b05-2a0e231dccf6","RequestId":"0HLLG50MNH95I:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG50MNH95I"}}
{"Timestamp":"2019-03-24T11:13:12.8830571+04:00","Level":"Information","MessageTemplate":"Executing action method {ActionName} with arguments ({Arguments}) - Validation state: {ValidationState}","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","Arguments":["6"],"ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"8b545297-9b0c-42f0-8b05-2a0e231dccf6","RequestId":"0HLLG50MNH95I:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG50MNH95I"}}
{"Timestamp":"2019-03-24T11:13:14.3250464+04:00","Level":"Information","MessageTemplate":"Executed action method {ActionName}, returned result {ActionResult} in {ElapsedMilliseconds}ms.","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ActionResult":"Microsoft.AspNetCore.Mvc.OkObjectResult","ElapsedMilliseconds":1436.9976000000001,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"8b545297-9b0c-42f0-8b05-2a0e231dccf6","RequestId":"0HLLG50MNH95I:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG50MNH95I"}}
{"Timestamp":"2019-03-24T11:13:14.3315142+04:00","Level":"Information","MessageTemplate":"Executing ObjectResult, writing value of type '{Type}'.","Properties":{"Type":"null","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"8b545297-9b0c-42f0-8b05-2a0e231dccf6","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","RequestId":"0HLLG50MNH95I:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG50MNH95I"}}
{"Timestamp":"2019-03-24T11:13:14.3344523+04:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ElapsedMilliseconds":1474.2884000000001,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"8b545297-9b0c-42f0-8b05-2a0e231dccf6","RequestId":"0HLLG50MNH95I:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG50MNH95I"}}
{"Timestamp":"2019-03-24T11:13:14.3354729+04:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG50MNH95I:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG50MNH95I"}}
{"Timestamp":"2019-03-24T11:13:14.3397585+04:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","Properties":{"ElapsedMilliseconds":1532.3408000000002,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 1532.3408ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG50MNH95I:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG50MNH95I"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished in 1532.3408ms 204 "}]}}
{"Timestamp":"2019-03-24T11:14:17.7433290+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks/6","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG50MNH95I:00000002","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG50MNH95I"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  "}]}}
{"Timestamp":"2019-03-24T11:14:17.7455376+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG50MNH95I:00000002","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG50MNH95I"}}
{"Timestamp":"2019-03-24T11:14:17.7479138+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"8b545297-9b0c-42f0-8b05-2a0e231dccf6","RequestId":"0HLLG50MNH95I:00000002","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG50MNH95I"}}
{"Timestamp":"2019-03-24T11:14:17.7516774+04:00","Level":"Information","MessageTemplate":"Executing action method {ActionName} with arguments ({Arguments}) - Validation state: {ValidationState}","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","Arguments":["6"],"ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"8b545297-9b0c-42f0-8b05-2a0e231dccf6","RequestId":"0HLLG50MNH95I:00000002","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG50MNH95I"}}
{"Timestamp":"2019-03-24T11:14:17.7633866+04:00","Level":"Information","MessageTemplate":"Executed action method {ActionName}, returned result {ActionResult} in {ElapsedMilliseconds}ms.","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ActionResult":"Microsoft.AspNetCore.Mvc.OkObjectResult","ElapsedMilliseconds":8.8408,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"8b545297-9b0c-42f0-8b05-2a0e231dccf6","RequestId":"0HLLG50MNH95I:00000002","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG50MNH95I"}}
{"Timestamp":"2019-03-24T11:14:17.7684204+04:00","Level":"Information","MessageTemplate":"Executing ObjectResult, writing value of type '{Type}'.","Properties":{"Type":"null","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"8b545297-9b0c-42f0-8b05-2a0e231dccf6","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","RequestId":"0HLLG50MNH95I:00000002","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG50MNH95I"}}
{"Timestamp":"2019-03-24T11:14:17.7709323+04:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ElapsedMilliseconds":20.7787,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"8b545297-9b0c-42f0-8b05-2a0e231dccf6","RequestId":"0HLLG50MNH95I:00000002","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG50MNH95I"}}
{"Timestamp":"2019-03-24T11:14:17.7722586+04:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG50MNH95I:00000002","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG50MNH95I"}}
{"Timestamp":"2019-03-24T11:14:17.7736077+04:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","Properties":{"ElapsedMilliseconds":30.2986,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 30.2986ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG50MNH95I:00000002","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG50MNH95I"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished in 30.2986ms 204 "}]}}
{"Timestamp":"2019-03-24T11:14:27.7212680+04:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\aghas\\AppData\\Local\\ASP.NET\\DataProtection-Keys","SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2019-03-24T11:14:31.0499233+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks/6","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG51E1J33F:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG51E1J33F"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  "}]}}
{"Timestamp":"2019-03-24T11:14:31.0754860+04:00","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HLLG51E1J33F:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG51E1J33F"}}
{"Timestamp":"2019-03-24T11:14:31.0959199+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG51E1J33F:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG51E1J33F"}}
{"Timestamp":"2019-03-24T11:14:31.1120861+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"b398360a-3737-4f24-97b2-56007a8bc2b4","RequestId":"0HLLG51E1J33F:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG51E1J33F"}}
{"Timestamp":"2019-03-24T11:14:31.1858867+04:00","Level":"Information","MessageTemplate":"Executing action method {ActionName} with arguments ({Arguments}) - Validation state: {ValidationState}","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","Arguments":["6"],"ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"b398360a-3737-4f24-97b2-56007a8bc2b4","RequestId":"0HLLG51E1J33F:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG51E1J33F"}}
{"Timestamp":"2019-03-24T11:16:01.8482223+04:00","Level":"Information","MessageTemplate":"Executed action method {ActionName}, returned result {ActionResult} in {ElapsedMilliseconds}ms.","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ActionResult":"Microsoft.AspNetCore.Mvc.OkObjectResult","ElapsedMilliseconds":90651.1269,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"b398360a-3737-4f24-97b2-56007a8bc2b4","RequestId":"0HLLG51E1J33F:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG51E1J33F"}}
{"Timestamp":"2019-03-24T11:16:01.8566244+04:00","Level":"Information","MessageTemplate":"Executing ObjectResult, writing value of type '{Type}'.","Properties":{"Type":"ProjectWorks.AmrApp.Models.AppUsers","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"b398360a-3737-4f24-97b2-56007a8bc2b4","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","RequestId":"0HLLG51E1J33F:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG51E1J33F"}}
{"Timestamp":"2019-03-24T11:16:01.9952924+04:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ElapsedMilliseconds":90878.452700000009,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"b398360a-3737-4f24-97b2-56007a8bc2b4","RequestId":"0HLLG51E1J33F:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG51E1J33F"}}
{"Timestamp":"2019-03-24T11:16:01.9979842+04:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG51E1J33F:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG51E1J33F"}}
{"Timestamp":"2019-03-24T11:16:02.0013543+04:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","Properties":{"ElapsedMilliseconds":90952.4011,"StatusCode":200,"ContentType":"application/json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 90952.4011ms 200 application/json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG51E1J33F:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG51E1J33F"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished in 90952.4011ms 200 application/json; charset=utf-8"}]}}
{"Timestamp":"2019-03-24T11:19:51.9572134+04:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\aghas\\AppData\\Local\\ASP.NET\\DataProtection-Keys","SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2019-03-24T11:20:07.1204748+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks/6","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG54I6PIM8:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG54I6PIM8"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  "}]}}
{"Timestamp":"2019-03-24T11:20:07.1344686+04:00","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HLLG54I6PIM8:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG54I6PIM8"}}
{"Timestamp":"2019-03-24T11:20:07.1536373+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG54I6PIM8:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG54I6PIM8"}}
{"Timestamp":"2019-03-24T11:20:07.1681016+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"0b6b9a05-d6c1-4cd1-b582-fdedd2c2d4ea","RequestId":"0HLLG54I6PIM8:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG54I6PIM8"}}
{"Timestamp":"2019-03-24T11:20:07.1960113+04:00","Level":"Information","MessageTemplate":"Executing action method {ActionName} with arguments ({Arguments}) - Validation state: {ValidationState}","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","Arguments":["6"],"ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"0b6b9a05-d6c1-4cd1-b582-fdedd2c2d4ea","RequestId":"0HLLG54I6PIM8:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG54I6PIM8"}}
{"Timestamp":"2019-03-24T11:20:09.3126333+04:00","Level":"Information","MessageTemplate":"Executed action method {ActionName}, returned result {ActionResult} in {ElapsedMilliseconds}ms.","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ActionResult":"Microsoft.AspNetCore.Mvc.OkObjectResult","ElapsedMilliseconds":2111.3446,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"0b6b9a05-d6c1-4cd1-b582-fdedd2c2d4ea","RequestId":"0HLLG54I6PIM8:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG54I6PIM8"}}
{"Timestamp":"2019-03-24T11:20:09.3188432+04:00","Level":"Information","MessageTemplate":"Executing ObjectResult, writing value of type '{Type}'.","Properties":{"Type":"Castle.Proxies.AppUsersProxy","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"0b6b9a05-d6c1-4cd1-b582-fdedd2c2d4ea","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","RequestId":"0HLLG54I6PIM8:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG54I6PIM8"}}
{"Timestamp":"2019-03-24T11:20:09.6052803+04:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ElapsedMilliseconds":2433.1601,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"0b6b9a05-d6c1-4cd1-b582-fdedd2c2d4ea","RequestId":"0HLLG54I6PIM8:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG54I6PIM8"}}
{"Timestamp":"2019-03-24T11:20:09.6072319+04:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG54I6PIM8:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG54I6PIM8"}}
{"Timestamp":"2019-03-24T11:20:09.6085098+04:00","Level":"Error","MessageTemplate":"An unhandled exception has occurred while executing the request.","Exception":"Newtonsoft.Json.JsonSerializationException: Self referencing loop detected for property 'filial' with type 'Castle.Proxies.FilialsProxy'. Path 'appUserDepartment.filial.accessRules[0].appUserDepartment'.\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(JsonWriter writer, Object value, JsonProperty property, JsonContract contract, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(JsonWriter writer, Object value, JsonContainerContract contract, JsonProperty member, JsonProperty property, JsonContract& memberContract, Object& memberValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(JsonWriter writer, IEnumerable values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(JsonWriter jsonWriter, Object value, Type objectType)\r\n   at Newtonsoft.Json.JsonSerializer.SerializeInternal(JsonWriter jsonWriter, Object value, Type objectType)\r\n   at Newtonsoft.Json.JsonSerializer.Serialize(JsonWriter jsonWriter, Object value)\r\n   at Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteObject(TextWriter writer, Object value)\r\n   at Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)","Properties":{"EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HLLG54I6PIM8:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG54I6PIM8"}}
{"Timestamp":"2019-03-24T11:20:09.6415508+04:00","Level":"Warning","MessageTemplate":"The response has already started, the error page middleware will not be executed.","Properties":{"EventId":{"Id":2,"Name":"ResponseStarted"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HLLG54I6PIM8:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG54I6PIM8"}}
{"Timestamp":"2019-03-24T11:20:09.6436129+04:00","Level":"Error","MessageTemplate":"Connection id \"{ConnectionId}\", Request id \"{TraceIdentifier}\": An unhandled exception was thrown by the application.","Exception":"Newtonsoft.Json.JsonSerializationException: Self referencing loop detected for property 'filial' with type 'Castle.Proxies.FilialsProxy'. Path 'appUserDepartment.filial.accessRules[0].appUserDepartment'.\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(JsonWriter writer, Object value, JsonProperty property, JsonContract contract, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(JsonWriter writer, Object value, JsonContainerContract contract, JsonProperty member, JsonProperty property, JsonContract& memberContract, Object& memberValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(JsonWriter writer, IEnumerable values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(JsonWriter jsonWriter, Object value, Type objectType)\r\n   at Newtonsoft.Json.JsonSerializer.SerializeInternal(JsonWriter jsonWriter, Object value, Type objectType)\r\n   at Newtonsoft.Json.JsonSerializer.Serialize(JsonWriter jsonWriter, Object value)\r\n   at Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteObject(TextWriter writer, Object value)\r\n   at Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)","Properties":{"ConnectionId":"0HLLG54I6PIM8","TraceIdentifier":"0HLLG54I6PIM8:00000001","EventId":{"Id":13,"Name":"ApplicationError"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel","RequestId":"0HLLG54I6PIM8:00000001","RequestPath":"/api/tasks/6","CorrelationId":null}}
{"Timestamp":"2019-03-24T11:20:09.6706390+04:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","Properties":{"ElapsedMilliseconds":2551.0096000000003,"StatusCode":200,"ContentType":"application/json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 2551.0096ms 200 application/json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG54I6PIM8:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG54I6PIM8"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished in 2551.0096ms 200 application/json; charset=utf-8"}]}}
{"Timestamp":"2019-03-24T11:22:34.8735686+04:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\aghas\\AppData\\Local\\ASP.NET\\DataProtection-Keys","SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2019-03-24T11:24:06.9004630+04:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\aghas\\AppData\\Local\\ASP.NET\\DataProtection-Keys","SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2019-03-24T11:24:11.2062215+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks/6","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG56QUBIOE:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG56QUBIOE"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  "}]}}
{"Timestamp":"2019-03-24T11:24:11.2310496+04:00","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HLLG56QUBIOE:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG56QUBIOE"}}
{"Timestamp":"2019-03-24T11:24:11.2509658+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG56QUBIOE:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG56QUBIOE"}}
{"Timestamp":"2019-03-24T11:24:11.2666688+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"49fa0d39-3307-4ea8-94ea-01c91401b42f","RequestId":"0HLLG56QUBIOE:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG56QUBIOE"}}
{"Timestamp":"2019-03-24T11:24:11.3324954+04:00","Level":"Information","MessageTemplate":"Executing action method {ActionName} with arguments ({Arguments}) - Validation state: {ValidationState}","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","Arguments":["6"],"ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"49fa0d39-3307-4ea8-94ea-01c91401b42f","RequestId":"0HLLG56QUBIOE:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG56QUBIOE"}}
{"Timestamp":"2019-03-24T11:24:56.2247343+04:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\aghas\\AppData\\Local\\ASP.NET\\DataProtection-Keys","SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2019-03-24T11:25:00.0528805+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks/6","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG579GB30K:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG579GB30K"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  "}]}}
{"Timestamp":"2019-03-24T11:25:00.0662027+04:00","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HLLG579GB30K:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG579GB30K"}}
{"Timestamp":"2019-03-24T11:25:00.0849359+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG579GB30K:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG579GB30K"}}
{"Timestamp":"2019-03-24T11:25:00.0993596+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"c6aebfd5-964c-4f47-89ca-552d98086c9e","RequestId":"0HLLG579GB30K:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG579GB30K"}}
{"Timestamp":"2019-03-24T11:25:00.1255591+04:00","Level":"Information","MessageTemplate":"Executing action method {ActionName} with arguments ({Arguments}) - Validation state: {ValidationState}","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","Arguments":["6"],"ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"c6aebfd5-964c-4f47-89ca-552d98086c9e","RequestId":"0HLLG579GB30K:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG579GB30K"}}
{"Timestamp":"2019-03-24T11:25:01.7203127+04:00","Level":"Information","MessageTemplate":"Executed action method {ActionName}, returned result {ActionResult} in {ElapsedMilliseconds}ms.","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ActionResult":"Microsoft.AspNetCore.Mvc.OkObjectResult","ElapsedMilliseconds":1589.3111000000001,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"c6aebfd5-964c-4f47-89ca-552d98086c9e","RequestId":"0HLLG579GB30K:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG579GB30K"}}
{"Timestamp":"2019-03-24T11:25:01.7274507+04:00","Level":"Information","MessageTemplate":"Executing ObjectResult, writing value of type '{Type}'.","Properties":{"Type":"System.Int32","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"c6aebfd5-964c-4f47-89ca-552d98086c9e","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","RequestId":"0HLLG579GB30K:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG579GB30K"}}
{"Timestamp":"2019-03-24T11:25:01.7498173+04:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ElapsedMilliseconds":1646.794,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"c6aebfd5-964c-4f47-89ca-552d98086c9e","RequestId":"0HLLG579GB30K:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG579GB30K"}}
{"Timestamp":"2019-03-24T11:25:01.7523651+04:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG579GB30K:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG579GB30K"}}
{"Timestamp":"2019-03-24T11:25:01.7553589+04:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","Properties":{"ElapsedMilliseconds":1703.3574,"StatusCode":200,"ContentType":"application/json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 1703.3574ms 200 application/json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG579GB30K:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG579GB30K"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished in 1703.3574ms 200 application/json; charset=utf-8"}]}}
{"Timestamp":"2019-03-24T11:25:34.6286695+04:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\aghas\\AppData\\Local\\ASP.NET\\DataProtection-Keys","SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2019-03-24T11:25:39.8721334+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks/6","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG57LC0PV3:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG57LC0PV3"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  "}]}}
{"Timestamp":"2019-03-24T11:25:39.9004186+04:00","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HLLG57LC0PV3:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG57LC0PV3"}}
{"Timestamp":"2019-03-24T11:25:39.9219329+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG57LC0PV3:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG57LC0PV3"}}
{"Timestamp":"2019-03-24T11:25:39.9386037+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"8ca71d6b-b0c8-4c46-be9b-ae5248eeb194","RequestId":"0HLLG57LC0PV3:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG57LC0PV3"}}
{"Timestamp":"2019-03-24T11:25:40.0093459+04:00","Level":"Information","MessageTemplate":"Executing action method {ActionName} with arguments ({Arguments}) - Validation state: {ValidationState}","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","Arguments":["6"],"ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"8ca71d6b-b0c8-4c46-be9b-ae5248eeb194","RequestId":"0HLLG57LC0PV3:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG57LC0PV3"}}
{"Timestamp":"2019-03-24T11:25:43.7834532+04:00","Level":"Information","MessageTemplate":"Executed action method {ActionName}, returned result {ActionResult} in {ElapsedMilliseconds}ms.","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ActionResult":"Microsoft.AspNetCore.Mvc.OkObjectResult","ElapsedMilliseconds":3768.9089000000004,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"8ca71d6b-b0c8-4c46-be9b-ae5248eeb194","RequestId":"0HLLG57LC0PV3:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG57LC0PV3"}}
{"Timestamp":"2019-03-24T11:25:43.7903257+04:00","Level":"Information","MessageTemplate":"Executing ObjectResult, writing value of type '{Type}'.","Properties":{"Type":"ProjectWorks.AmrApp.Models.AppUsers","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"8ca71d6b-b0c8-4c46-be9b-ae5248eeb194","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","RequestId":"0HLLG57LC0PV3:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG57LC0PV3"}}
{"Timestamp":"2019-03-24T11:25:43.9109773+04:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ElapsedMilliseconds":3968.3514,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"8ca71d6b-b0c8-4c46-be9b-ae5248eeb194","RequestId":"0HLLG57LC0PV3:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG57LC0PV3"}}
{"Timestamp":"2019-03-24T11:25:43.9129845+04:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLG57LC0PV3:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG57LC0PV3"}}
{"Timestamp":"2019-03-24T11:25:43.9160831+04:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","Properties":{"ElapsedMilliseconds":4044.9673000000003,"StatusCode":200,"ContentType":"application/json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 4044.9673ms 200 application/json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLG57LC0PV3:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLG57LC0PV3"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished in 4044.9673ms 200 application/json; charset=utf-8"}]}}
