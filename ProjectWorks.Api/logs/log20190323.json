{"Timestamp":"2019-03-23T12:46:56.1148572+04:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\aghas\\AppData\\Local\\ASP.NET\\DataProtection-Keys","SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2019-03-23T12:49:34.0010515+04:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\aghas\\AppData\\Local\\ASP.NET\\DataProtection-Keys","SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2019-03-23T12:50:18.5086244+04:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\aghas\\AppData\\Local\\ASP.NET\\DataProtection-Keys","SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2019-03-23T12:50:31.2590579+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks/1","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/1  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLFDIDGFBLE:00000001","RequestPath":"/api/tasks/1","CorrelationId":null,"ConnectionId":"0HLLFDIDGFBLE"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/1  "}]}}
{"Timestamp":"2019-03-23T12:50:31.2933655+04:00","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HLLFDIDGFBLE:00000001","RequestPath":"/api/tasks/1","CorrelationId":null,"ConnectionId":"0HLLFDIDGFBLE"}}
{"Timestamp":"2019-03-23T12:50:31.3215716+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.GetAll (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLFDIDGFBLE:00000001","RequestPath":"/api/tasks/1","CorrelationId":null,"ConnectionId":"0HLLFDIDGFBLE"}}
{"Timestamp":"2019-03-23T12:50:31.3423860+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"GetAll\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.GetAll (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"55675450-5f6b-4a5a-ae24-a3b8790f83b5","RequestId":"0HLLFDIDGFBLE:00000001","RequestPath":"/api/tasks/1","CorrelationId":null,"ConnectionId":"0HLLFDIDGFBLE"}}
{"Timestamp":"2019-03-23T12:50:31.4751016+04:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.GetAll (ProjectWorks.Task)","ElapsedMilliseconds":128.2973,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"55675450-5f6b-4a5a-ae24-a3b8790f83b5","RequestId":"0HLLFDIDGFBLE:00000001","RequestPath":"/api/tasks/1","CorrelationId":null,"ConnectionId":"0HLLFDIDGFBLE"}}
{"Timestamp":"2019-03-23T12:50:31.4979761+04:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.GetAll (ProjectWorks.Task)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLFDIDGFBLE:00000001","RequestPath":"/api/tasks/1","CorrelationId":null,"ConnectionId":"0HLLFDIDGFBLE"}}
{"Timestamp":"2019-03-23T12:50:31.6080584+04:00","Level":"Error","MessageTemplate":"An unhandled exception has occurred while executing the request.","Exception":"System.InvalidOperationException: Unable to resolve service for type 'ProjectWorks.Task.Services.TasksServices' while attempting to activate 'ProjectWorks.Task.Controllers.TasksController'.\r\n   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.GetService(IServiceProvider sp, Type type, Type requiredBy, Boolean isDefaultParameterRequired)\r\n   at lambda_method(Closure , IServiceProvider , Object[] )\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerActivatorProvider.<>c__DisplayClass4_0.<CreateActivator>b__0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass5_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)","Properties":{"EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HLLFDIDGFBLE:00000001","RequestPath":"/api/tasks/1","CorrelationId":null,"ConnectionId":"0HLLFDIDGFBLE"}}
{"Timestamp":"2019-03-23T12:50:31.7402366+04:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","Properties":{"ElapsedMilliseconds":482.1157,"StatusCode":500,"ContentType":"text/html; charset=utf-8","HostingRequestFinishedLog":"Request finished in 482.1157ms 500 text/html; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLFDIDGFBLE:00000001","RequestPath":"/api/tasks/1","CorrelationId":null,"ConnectionId":"0HLLFDIDGFBLE"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished in 482.1157ms 500 text/html; charset=utf-8"}]}}
{"Timestamp":"2019-03-23T12:50:54.6444550+04:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\aghas\\AppData\\Local\\ASP.NET\\DataProtection-Keys","SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2019-03-23T12:50:59.9355950+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks/1","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/1  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLFDIM2352N:00000001","RequestPath":"/api/tasks/1","CorrelationId":null,"ConnectionId":"0HLLFDIM2352N"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/1  "}]}}
{"Timestamp":"2019-03-23T12:50:59.9698099+04:00","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HLLFDIM2352N:00000001","RequestPath":"/api/tasks/1","CorrelationId":null,"ConnectionId":"0HLLFDIM2352N"}}
{"Timestamp":"2019-03-23T12:50:59.9922257+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLFDIM2352N:00000001","RequestPath":"/api/tasks/1","CorrelationId":null,"ConnectionId":"0HLLFDIM2352N"}}
{"Timestamp":"2019-03-23T12:51:00.0098512+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"1c1205d6-57d4-482c-be75-b88601d1df8f","RequestId":"0HLLFDIM2352N:00000001","RequestPath":"/api/tasks/1","CorrelationId":null,"ConnectionId":"0HLLFDIM2352N"}}
{"Timestamp":"2019-03-23T12:51:00.1319568+04:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ElapsedMilliseconds":116.5425,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"1c1205d6-57d4-482c-be75-b88601d1df8f","RequestId":"0HLLFDIM2352N:00000001","RequestPath":"/api/tasks/1","CorrelationId":null,"ConnectionId":"0HLLFDIM2352N"}}
{"Timestamp":"2019-03-23T12:51:00.1560892+04:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLFDIM2352N:00000001","RequestPath":"/api/tasks/1","CorrelationId":null,"ConnectionId":"0HLLFDIM2352N"}}
{"Timestamp":"2019-03-23T12:51:00.2559986+04:00","Level":"Error","MessageTemplate":"An unhandled exception has occurred while executing the request.","Exception":"System.InvalidOperationException: Unable to resolve service for type 'ProjectWorks.Task.Services.TasksServices' while attempting to activate 'ProjectWorks.Task.Controllers.TasksController'.\r\n   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.GetService(IServiceProvider sp, Type type, Type requiredBy, Boolean isDefaultParameterRequired)\r\n   at lambda_method(Closure , IServiceProvider , Object[] )\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerActivatorProvider.<>c__DisplayClass4_0.<CreateActivator>b__0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass5_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)","Properties":{"EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HLLFDIM2352N:00000001","RequestPath":"/api/tasks/1","CorrelationId":null,"ConnectionId":"0HLLFDIM2352N"}}
{"Timestamp":"2019-03-23T12:51:00.3458776+04:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","Properties":{"ElapsedMilliseconds":411.54130000000004,"StatusCode":500,"ContentType":"text/html; charset=utf-8","HostingRequestFinishedLog":"Request finished in 411.5413ms 500 text/html; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLFDIM2352N:00000001","RequestPath":"/api/tasks/1","CorrelationId":null,"ConnectionId":"0HLLFDIM2352N"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished in 411.5413ms 500 text/html; charset=utf-8"}]}}
{"Timestamp":"2019-03-23T12:52:24.5924472+04:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\aghas\\AppData\\Local\\ASP.NET\\DataProtection-Keys","SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2019-03-23T12:52:33.9087972+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks/6","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLFDJI274MG:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDJI274MG"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  "}]}}
{"Timestamp":"2019-03-23T12:52:33.9505846+04:00","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HLLFDJI274MG:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDJI274MG"}}
{"Timestamp":"2019-03-23T12:52:33.9818354+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLFDJI274MG:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDJI274MG"}}
{"Timestamp":"2019-03-23T12:52:34.0012589+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"3e84855a-dd4e-48f0-85f4-7f249730b8b6","RequestId":"0HLLFDJI274MG:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDJI274MG"}}
{"Timestamp":"2019-03-23T12:52:34.1415753+04:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ElapsedMilliseconds":135.9435,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"3e84855a-dd4e-48f0-85f4-7f249730b8b6","RequestId":"0HLLFDJI274MG:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDJI274MG"}}
{"Timestamp":"2019-03-23T12:52:34.1647916+04:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLFDJI274MG:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDJI274MG"}}
{"Timestamp":"2019-03-23T12:52:34.2766726+04:00","Level":"Error","MessageTemplate":"An unhandled exception has occurred while executing the request.","Exception":"System.InvalidOperationException: Unable to resolve service for type 'ProjectWorks.Task.Services.TasksServices' while attempting to activate 'ProjectWorks.Task.Controllers.TasksController'.\r\n   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.GetService(IServiceProvider sp, Type type, Type requiredBy, Boolean isDefaultParameterRequired)\r\n   at lambda_method(Closure , IServiceProvider , Object[] )\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerActivatorProvider.<>c__DisplayClass4_0.<CreateActivator>b__0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass5_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)","Properties":{"EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HLLFDJI274MG:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDJI274MG"}}
{"Timestamp":"2019-03-23T12:52:34.3711487+04:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","Properties":{"ElapsedMilliseconds":463.43440000000004,"StatusCode":500,"ContentType":"text/html; charset=utf-8","HostingRequestFinishedLog":"Request finished in 463.4344ms 500 text/html; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLFDJI274MG:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDJI274MG"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished in 463.4344ms 500 text/html; charset=utf-8"}]}}
{"Timestamp":"2019-03-23T12:52:42.5538893+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLFDJI274MG:00000002","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDJI274MG"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks  "}]}}
{"Timestamp":"2019-03-23T12:52:42.5563107+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLFDJI274MG:00000002","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDJI274MG"}}
{"Timestamp":"2019-03-23T12:52:42.5614483+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"31ef0315-05f2-4208-a467-cc2cfc2970e5","RequestId":"0HLLFDJI274MG:00000002","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDJI274MG"}}
{"Timestamp":"2019-03-23T12:52:42.6746576+04:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ElapsedMilliseconds":109.3981,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"31ef0315-05f2-4208-a467-cc2cfc2970e5","RequestId":"0HLLFDJI274MG:00000002","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDJI274MG"}}
{"Timestamp":"2019-03-23T12:52:42.6986152+04:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLFDJI274MG:00000002","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDJI274MG"}}
{"Timestamp":"2019-03-23T12:52:42.8043392+04:00","Level":"Error","MessageTemplate":"An unhandled exception has occurred while executing the request.","Exception":"System.InvalidOperationException: Unable to resolve service for type 'ProjectWorks.Task.Services.TasksServices' while attempting to activate 'ProjectWorks.Task.Controllers.TasksController'.\r\n   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.GetService(IServiceProvider sp, Type type, Type requiredBy, Boolean isDefaultParameterRequired)\r\n   at lambda_method(Closure , IServiceProvider , Object[] )\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerActivatorProvider.<>c__DisplayClass4_0.<CreateActivator>b__0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass5_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)","Properties":{"EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HLLFDJI274MG:00000002","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDJI274MG"}}
{"Timestamp":"2019-03-23T12:52:42.8563785+04:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","Properties":{"ElapsedMilliseconds":302.50210000000004,"StatusCode":500,"ContentType":"text/html; charset=utf-8","HostingRequestFinishedLog":"Request finished in 302.5021ms 500 text/html; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLFDJI274MG:00000002","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDJI274MG"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished in 302.5021ms 500 text/html; charset=utf-8"}]}}
{"Timestamp":"2019-03-23T12:55:28.9966077+04:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\aghas\\AppData\\Local\\ASP.NET\\DataProtection-Keys","SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2019-03-23T12:55:38.2173601+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLFDL900UJL:00000001","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDL900UJL"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks  "}]}}
{"Timestamp":"2019-03-23T12:55:38.2429669+04:00","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HLLFDL900UJL:00000001","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDL900UJL"}}
{"Timestamp":"2019-03-23T12:55:38.2640983+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLFDL900UJL:00000001","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDL900UJL"}}
{"Timestamp":"2019-03-23T12:55:38.2737152+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"b37bfbd0-0b2e-41fc-907a-6b84b99fe339","RequestId":"0HLLFDL900UJL:00000001","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDL900UJL"}}
{"Timestamp":"2019-03-23T12:55:38.3978079+04:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ElapsedMilliseconds":119.6496,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"b37bfbd0-0b2e-41fc-907a-6b84b99fe339","RequestId":"0HLLFDL900UJL:00000001","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDL900UJL"}}
{"Timestamp":"2019-03-23T12:55:38.4193818+04:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLFDL900UJL:00000001","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDL900UJL"}}
{"Timestamp":"2019-03-23T12:55:38.5231949+04:00","Level":"Error","MessageTemplate":"An unhandled exception has occurred while executing the request.","Exception":"System.InvalidOperationException: Unable to resolve service for type 'ProjectWorks.Task.Services.TasksServices' while attempting to activate 'ProjectWorks.Task.Controllers.TasksController'.\r\n   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.GetService(IServiceProvider sp, Type type, Type requiredBy, Boolean isDefaultParameterRequired)\r\n   at lambda_method(Closure , IServiceProvider , Object[] )\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerActivatorProvider.<>c__DisplayClass4_0.<CreateActivator>b__0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass5_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)","Properties":{"EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HLLFDL900UJL:00000001","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDL900UJL"}}
{"Timestamp":"2019-03-23T12:55:38.6253013+04:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","Properties":{"ElapsedMilliseconds":408.9198,"StatusCode":500,"ContentType":"text/html; charset=utf-8","HostingRequestFinishedLog":"Request finished in 408.9198ms 500 text/html; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLFDL900UJL:00000001","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDL900UJL"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished in 408.9198ms 500 text/html; charset=utf-8"}]}}
{"Timestamp":"2019-03-23T12:58:45.8270635+04:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\aghas\\AppData\\Local\\ASP.NET\\DataProtection-Keys","SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2019-03-23T12:58:54.0423511+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks/6","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLFDN3BD554:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDN3BD554"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  "}]}}
{"Timestamp":"2019-03-23T12:58:54.0706697+04:00","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HLLFDN3BD554:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDN3BD554"}}
{"Timestamp":"2019-03-23T12:58:54.0934701+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLFDN3BD554:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDN3BD554"}}
{"Timestamp":"2019-03-23T12:58:54.1090515+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"07ac1869-8f80-41d7-baef-c190ad42738b","RequestId":"0HLLFDN3BD554:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDN3BD554"}}
{"Timestamp":"2019-03-23T12:58:54.2328086+04:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ElapsedMilliseconds":119.31710000000001,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"07ac1869-8f80-41d7-baef-c190ad42738b","RequestId":"0HLLFDN3BD554:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDN3BD554"}}
{"Timestamp":"2019-03-23T12:58:54.2544898+04:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLFDN3BD554:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDN3BD554"}}
{"Timestamp":"2019-03-23T12:58:54.3503850+04:00","Level":"Error","MessageTemplate":"An unhandled exception has occurred while executing the request.","Exception":"System.InvalidOperationException: Unable to resolve service for type 'ProjectWorks.Task.Data.Repository.TaskRepositories' while attempting to activate 'ProjectWorks.Task.Services.TasksServices'.\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.GetService(IServiceProvider sp, Type type, Type requiredBy, Boolean isDefaultParameterRequired)\r\n   at lambda_method(Closure , IServiceProvider , Object[] )\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerActivatorProvider.<>c__DisplayClass4_0.<CreateActivator>b__0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass5_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)","Properties":{"EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HLLFDN3BD554:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDN3BD554"}}
{"Timestamp":"2019-03-23T12:58:54.4509771+04:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","Properties":{"ElapsedMilliseconds":409.61670000000004,"StatusCode":500,"ContentType":"text/html; charset=utf-8","HostingRequestFinishedLog":"Request finished in 409.6167ms 500 text/html; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLFDN3BD554:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDN3BD554"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished in 409.6167ms 500 text/html; charset=utf-8"}]}}
{"Timestamp":"2019-03-23T13:00:13.7418495+04:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\aghas\\AppData\\Local\\ASP.NET\\DataProtection-Keys","SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2019-03-23T13:00:17.2300883+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks/6","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLFDNS4RCSF:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDNS4RCSF"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  "}]}}
{"Timestamp":"2019-03-23T13:00:17.2583724+04:00","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HLLFDNS4RCSF:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDNS4RCSF"}}
{"Timestamp":"2019-03-23T13:00:17.2801537+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLFDNS4RCSF:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDNS4RCSF"}}
{"Timestamp":"2019-03-23T13:00:17.2957495+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"0eefc9f6-3dc1-4d40-a066-6f405bf1ed66","RequestId":"0HLLFDNS4RCSF:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDNS4RCSF"}}
{"Timestamp":"2019-03-23T13:00:17.4182013+04:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ElapsedMilliseconds":118.7562,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"0eefc9f6-3dc1-4d40-a066-6f405bf1ed66","RequestId":"0HLLFDNS4RCSF:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDNS4RCSF"}}
{"Timestamp":"2019-03-23T13:00:17.4401645+04:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLFDNS4RCSF:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDNS4RCSF"}}
{"Timestamp":"2019-03-23T13:00:17.5379725+04:00","Level":"Error","MessageTemplate":"An unhandled exception has occurred while executing the request.","Exception":"System.InvalidOperationException: Unable to resolve service for type 'ProjectWorks.Task.DataContextFactory' while attempting to activate 'ProjectWorks.Task.Services.TasksServices'.\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.GetService(IServiceProvider sp, Type type, Type requiredBy, Boolean isDefaultParameterRequired)\r\n   at lambda_method(Closure , IServiceProvider , Object[] )\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerActivatorProvider.<>c__DisplayClass4_0.<CreateActivator>b__0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass5_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)","Properties":{"EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HLLFDNS4RCSF:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDNS4RCSF"}}
{"Timestamp":"2019-03-23T13:00:17.6443689+04:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","Properties":{"ElapsedMilliseconds":415.4168,"StatusCode":500,"ContentType":"text/html; charset=utf-8","HostingRequestFinishedLog":"Request finished in 415.4168ms 500 text/html; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLFDNS4RCSF:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDNS4RCSF"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished in 415.4168ms 500 text/html; charset=utf-8"}]}}
{"Timestamp":"2019-03-23T13:01:16.2000119+04:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\aghas\\AppData\\Local\\ASP.NET\\DataProtection-Keys","SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2019-03-23T13:01:34.3970257+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks/6","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLFDOJ4HSJU:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDOJ4HSJU"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  "}]}}
{"Timestamp":"2019-03-23T13:01:34.4244208+04:00","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HLLFDOJ4HSJU:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDOJ4HSJU"}}
{"Timestamp":"2019-03-23T13:01:34.4458771+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLFDOJ4HSJU:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDOJ4HSJU"}}
{"Timestamp":"2019-03-23T13:01:34.4615074+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"8af97814-6155-46f8-ab8a-4ff5294573e4","RequestId":"0HLLFDOJ4HSJU:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDOJ4HSJU"}}
{"Timestamp":"2019-03-23T13:01:34.5914555+04:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ElapsedMilliseconds":125.67120000000001,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"8af97814-6155-46f8-ab8a-4ff5294573e4","RequestId":"0HLLFDOJ4HSJU:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDOJ4HSJU"}}
{"Timestamp":"2019-03-23T13:01:34.6139683+04:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLFDOJ4HSJU:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDOJ4HSJU"}}
{"Timestamp":"2019-03-23T13:01:34.7189911+04:00","Level":"Error","MessageTemplate":"An unhandled exception has occurred while executing the request.","Exception":"System.InvalidOperationException: Unable to resolve service for type 'ProjectWorks.Task.DataContextFactory' while attempting to activate 'ProjectWorks.Task.Services.TasksServices'.\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.GetService(IServiceProvider sp, Type type, Type requiredBy, Boolean isDefaultParameterRequired)\r\n   at lambda_method(Closure , IServiceProvider , Object[] )\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerActivatorProvider.<>c__DisplayClass4_0.<CreateActivator>b__0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass5_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)","Properties":{"EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HLLFDOJ4HSJU:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDOJ4HSJU"}}
{"Timestamp":"2019-03-23T13:01:34.8246064+04:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","Properties":{"ElapsedMilliseconds":428.7567,"StatusCode":500,"ContentType":"text/html; charset=utf-8","HostingRequestFinishedLog":"Request finished in 428.7567ms 500 text/html; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLFDOJ4HSJU:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDOJ4HSJU"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished in 428.7567ms 500 text/html; charset=utf-8"}]}}
{"Timestamp":"2019-03-23T13:01:37.9217139+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLFDOJ4HSJU:00000002","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDOJ4HSJU"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks  "}]}}
{"Timestamp":"2019-03-23T13:01:37.9252524+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLFDOJ4HSJU:00000002","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDOJ4HSJU"}}
{"Timestamp":"2019-03-23T13:01:37.9316746+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"6ec0618f-4427-433b-854c-b058c45dde34","RequestId":"0HLLFDOJ4HSJU:00000002","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDOJ4HSJU"}}
{"Timestamp":"2019-03-23T13:01:38.0491545+04:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ElapsedMilliseconds":114.4475,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"6ec0618f-4427-433b-854c-b058c45dde34","RequestId":"0HLLFDOJ4HSJU:00000002","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDOJ4HSJU"}}
{"Timestamp":"2019-03-23T13:01:38.0747127+04:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLFDOJ4HSJU:00000002","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDOJ4HSJU"}}
{"Timestamp":"2019-03-23T13:01:38.1846311+04:00","Level":"Error","MessageTemplate":"An unhandled exception has occurred while executing the request.","Exception":"System.InvalidOperationException: Unable to resolve service for type 'ProjectWorks.Task.DataContextFactory' while attempting to activate 'ProjectWorks.Task.Services.TasksServices'.\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.GetService(IServiceProvider sp, Type type, Type requiredBy, Boolean isDefaultParameterRequired)\r\n   at lambda_method(Closure , IServiceProvider , Object[] )\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerActivatorProvider.<>c__DisplayClass4_0.<CreateActivator>b__0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass5_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)","Properties":{"EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HLLFDOJ4HSJU:00000002","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDOJ4HSJU"}}
{"Timestamp":"2019-03-23T13:01:38.2419167+04:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","Properties":{"ElapsedMilliseconds":320.2255,"StatusCode":500,"ContentType":"text/html; charset=utf-8","HostingRequestFinishedLog":"Request finished in 320.2255ms 500 text/html; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLFDOJ4HSJU:00000002","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDOJ4HSJU"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished in 320.2255ms 500 text/html; charset=utf-8"}]}}
{"Timestamp":"2019-03-23T13:02:49.1067704+04:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\aghas\\AppData\\Local\\ASP.NET\\DataProtection-Keys","SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2019-03-23T13:02:52.4694905+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLFDPADAKOK:00000001","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDPADAKOK"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks  "}]}}
{"Timestamp":"2019-03-23T13:02:52.4965801+04:00","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HLLFDPADAKOK:00000001","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDPADAKOK"}}
{"Timestamp":"2019-03-23T13:02:52.5184222+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLFDPADAKOK:00000001","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDPADAKOK"}}
{"Timestamp":"2019-03-23T13:02:52.5287688+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"64fe576f-01bf-4d40-9fb0-22e2f008cf94","RequestId":"0HLLFDPADAKOK:00000001","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDPADAKOK"}}
{"Timestamp":"2019-03-23T13:02:52.6531296+04:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ElapsedMilliseconds":121.02390000000001,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"64fe576f-01bf-4d40-9fb0-22e2f008cf94","RequestId":"0HLLFDPADAKOK:00000001","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDPADAKOK"}}
{"Timestamp":"2019-03-23T13:02:52.6754256+04:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLFDPADAKOK:00000001","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDPADAKOK"}}
{"Timestamp":"2019-03-23T13:02:52.7769800+04:00","Level":"Error","MessageTemplate":"An unhandled exception has occurred while executing the request.","Exception":"System.InvalidOperationException: Unable to resolve service for type 'ProjectWorks.Data.Services.GetConnectionStringService' while attempting to activate 'ProjectWorks.Task.Services.TasksServices'.\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.GetService(IServiceProvider sp, Type type, Type requiredBy, Boolean isDefaultParameterRequired)\r\n   at lambda_method(Closure , IServiceProvider , Object[] )\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerActivatorProvider.<>c__DisplayClass4_0.<CreateActivator>b__0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass5_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)","Properties":{"EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HLLFDPADAKOK:00000001","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDPADAKOK"}}
{"Timestamp":"2019-03-23T13:02:52.8824229+04:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","Properties":{"ElapsedMilliseconds":413.9642,"StatusCode":500,"ContentType":"text/html; charset=utf-8","HostingRequestFinishedLog":"Request finished in 413.9642ms 500 text/html; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLFDPADAKOK:00000001","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDPADAKOK"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished in 413.9642ms 500 text/html; charset=utf-8"}]}}
{"Timestamp":"2019-03-23T13:03:44.6119507+04:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\aghas\\AppData\\Local\\ASP.NET\\DataProtection-Keys","SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2019-03-23T13:03:48.1865591+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLFDPR0KPH5:00000001","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDPR0KPH5"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks  "}]}}
{"Timestamp":"2019-03-23T13:03:48.2140538+04:00","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HLLFDPR0KPH5:00000001","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDPR0KPH5"}}
{"Timestamp":"2019-03-23T13:03:48.2351501+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLFDPR0KPH5:00000001","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDPR0KPH5"}}
{"Timestamp":"2019-03-23T13:03:48.2451628+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"3be62c5d-bd4e-4ff1-acef-cd88d25461f3","RequestId":"0HLLFDPR0KPH5:00000001","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDPR0KPH5"}}
{"Timestamp":"2019-03-23T13:03:48.3126318+04:00","Level":"Information","MessageTemplate":"Executing action method {ActionName} - Validation state: {ValidationState}","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"3be62c5d-bd4e-4ff1-acef-cd88d25461f3","RequestId":"0HLLFDPR0KPH5:00000001","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDPR0KPH5"}}
{"Timestamp":"2019-03-23T13:03:48.3180458+04:00","Level":"Information","MessageTemplate":"Executed action method {ActionName}, returned result {ActionResult} in {ElapsedMilliseconds}ms.","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ActionResult":"Microsoft.AspNetCore.Mvc.OkObjectResult","ElapsedMilliseconds":1.7708000000000002,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"3be62c5d-bd4e-4ff1-acef-cd88d25461f3","RequestId":"0HLLFDPR0KPH5:00000001","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDPR0KPH5"}}
{"Timestamp":"2019-03-23T13:03:48.3253523+04:00","Level":"Information","MessageTemplate":"Executing ObjectResult, writing value of type '{Type}'.","Properties":{"Type":"System.String","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"3be62c5d-bd4e-4ff1-acef-cd88d25461f3","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","RequestId":"0HLLFDPR0KPH5:00000001","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDPR0KPH5"}}
{"Timestamp":"2019-03-23T13:03:48.3325116+04:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ElapsedMilliseconds":83.1606,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"3be62c5d-bd4e-4ff1-acef-cd88d25461f3","RequestId":"0HLLFDPR0KPH5:00000001","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDPR0KPH5"}}
{"Timestamp":"2019-03-23T13:03:48.3347619+04:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLFDPR0KPH5:00000001","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDPR0KPH5"}}
{"Timestamp":"2019-03-23T13:03:48.3380194+04:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","Properties":{"ElapsedMilliseconds":152.48510000000002,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","HostingRequestFinishedLog":"Request finished in 152.4851ms 200 text/plain; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLFDPR0KPH5:00000001","RequestPath":"/api/tasks","CorrelationId":null,"ConnectionId":"0HLLFDPR0KPH5"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished in 152.4851ms 200 text/plain; charset=utf-8"}]}}
{"Timestamp":"2019-03-23T13:03:51.3469679+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks/6","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLFDPR0KPH5:00000002","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDPR0KPH5"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  "}]}}
{"Timestamp":"2019-03-23T13:03:51.3489257+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLFDPR0KPH5:00000002","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDPR0KPH5"}}
{"Timestamp":"2019-03-23T13:03:51.3587958+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"8728f1d5-7ca6-4052-acbc-660b5333b4f3","RequestId":"0HLLFDPR0KPH5:00000002","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDPR0KPH5"}}
{"Timestamp":"2019-03-23T13:03:51.4098527+04:00","Level":"Information","MessageTemplate":"Executing action method {ActionName} with arguments ({Arguments}) - Validation state: {ValidationState}","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","Arguments":["6"],"ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"8728f1d5-7ca6-4052-acbc-660b5333b4f3","RequestId":"0HLLFDPR0KPH5:00000002","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDPR0KPH5"}}
{"Timestamp":"2019-03-23T13:05:00.6094845+04:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\aghas\\AppData\\Local\\ASP.NET\\DataProtection-Keys","SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2019-03-23T13:05:07.5549553+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks/6","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLFDQILKM5M:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDQILKM5M"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  "}]}}
{"Timestamp":"2019-03-23T13:05:07.5815459+04:00","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HLLFDQILKM5M:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDQILKM5M"}}
{"Timestamp":"2019-03-23T13:05:07.6033113+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLFDQILKM5M:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDQILKM5M"}}
{"Timestamp":"2019-03-23T13:05:07.6197759+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"36f72a39-7728-4e1e-9a14-03b683d189ca","RequestId":"0HLLFDQILKM5M:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDQILKM5M"}}
{"Timestamp":"2019-03-23T13:05:07.6903438+04:00","Level":"Information","MessageTemplate":"Executing action method {ActionName} with arguments ({Arguments}) - Validation state: {ValidationState}","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","Arguments":["6"],"ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"36f72a39-7728-4e1e-9a14-03b683d189ca","RequestId":"0HLLFDQILKM5M:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDQILKM5M"}}
{"Timestamp":"2019-03-23T13:07:32.2173092+04:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\aghas\\AppData\\Local\\ASP.NET\\DataProtection-Keys","SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2019-03-23T13:07:36.5751369+04:00","Level":"Information","MessageTemplate":"{HostingRequestStartingLog:l}","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:60242","PathBase":"","Path":"/api/tasks/6","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLFDRV2KQ85:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDRV2KQ85"},"Renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/1.1 GET http://localhost:60242/api/tasks/6  "}]}}
{"Timestamp":"2019-03-23T13:07:36.6039610+04:00","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","Properties":{"EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HLLFDRV2KQ85:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDRV2KQ85"}}
{"Timestamp":"2019-03-23T13:07:36.6269523+04:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLFDRV2KQ85:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDRV2KQ85"}}
{"Timestamp":"2019-03-23T13:07:36.6433775+04:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing action {ActionName}","Properties":{"RouteData":"{action = \"Get\", controller = \"Tasks\"}","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"6013abe4-444d-4e7c-b910-eb14fd0509b1","RequestId":"0HLLFDRV2KQ85:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDRV2KQ85"}}
{"Timestamp":"2019-03-23T13:07:36.7215138+04:00","Level":"Information","MessageTemplate":"Executing action method {ActionName} with arguments ({Arguments}) - Validation state: {ValidationState}","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","Arguments":["6"],"ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"6013abe4-444d-4e7c-b910-eb14fd0509b1","RequestId":"0HLLFDRV2KQ85:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDRV2KQ85"}}
{"Timestamp":"2019-03-23T13:09:18.1494488+04:00","Level":"Information","MessageTemplate":"Executed action method {ActionName}, returned result {ActionResult} in {ElapsedMilliseconds}ms.","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ActionResult":"Microsoft.AspNetCore.Mvc.OkObjectResult","ElapsedMilliseconds":101422.4848,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"6013abe4-444d-4e7c-b910-eb14fd0509b1","RequestId":"0HLLFDRV2KQ85:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDRV2KQ85"}}
{"Timestamp":"2019-03-23T13:09:18.1566643+04:00","Level":"Information","MessageTemplate":"Executing ObjectResult, writing value of type '{Type}'.","Properties":{"Type":"System.String","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"6013abe4-444d-4e7c-b910-eb14fd0509b1","ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","RequestId":"0HLLFDRV2KQ85:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDRV2KQ85"}}
{"Timestamp":"2019-03-23T13:09:18.1633898+04:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","Properties":{"ActionName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","ElapsedMilliseconds":101515.7145,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"6013abe4-444d-4e7c-b910-eb14fd0509b1","RequestId":"0HLLFDRV2KQ85:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDRV2KQ85"}}
{"Timestamp":"2019-03-23T13:09:18.1652880+04:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","Properties":{"EndpointName":"ProjectWorks.Task.Controllers.TasksController.Get (ProjectWorks.Task)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLLFDRV2KQ85:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDRV2KQ85"}}
{"Timestamp":"2019-03-23T13:09:18.1687921+04:00","Level":"Information","MessageTemplate":"{HostingRequestFinishedLog:l}","Properties":{"ElapsedMilliseconds":101594.7895,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","HostingRequestFinishedLog":"Request finished in 101594.7895ms 200 text/plain; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLLFDRV2KQ85:00000001","RequestPath":"/api/tasks/6","CorrelationId":null,"ConnectionId":"0HLLFDRV2KQ85"},"Renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished in 101594.7895ms 200 text/plain; charset=utf-8"}]}}
{"Timestamp":"2019-03-23T13:17:15.5522543+04:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\aghas\\AppData\\Local\\ASP.NET\\DataProtection-Keys","SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
